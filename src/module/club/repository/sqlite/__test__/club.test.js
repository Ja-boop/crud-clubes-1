const { Sequelize } = require('sequelize');
const ClubRepository = require('../clubRepository');
const ClubModel = require('../clubModel');
const ClubEntity = require('../../../entity/club');

const sequelizeInstance = new Sequelize('sqlite::memory');

/**
 * @type ClubRepository
 */
let repository;

const sampleClub = new ClubEntity({
  name: 'Arsenal FC',
  shortName: 'Arsenal',
  tla: 'ARS',
  crestUrl: 'https://upload.wikimedia.org/wikipedia/en/5/53/Arsenal_FC.svg',
  address: '75 Drayton Park London N5 1BU',
  phone: '+44 (020) 76195003',
  website: 'http://www.arsenal.com',
  email: 'info@arsenal.co.uk',
  founded: 1886,
  clubColors: 'Red / White',
  venue: 'Emirates Stadium',
  lastUpdated: '2020-05-14T02:41:34Z',
});

beforeAll(async () => {
  repository = new ClubRepository(ClubModel.setup(sequelizeInstance));
});

beforeEach(async () => {
  await sequelizeInstance.sync({ force: true });
});

test('Crea un equipo cuando la entidad no tiene id', async () => {
  const NEW_AUTOGENERATED_ID = 1;
  const newClub = await repository.save(sampleClub);
  console.log(newClub);
  expect(newClub.id).toEqual(NEW_AUTOGENERATED_ID);
});

test('Actualiza un equipo cuando la entidad tiene un id', async () => {
  const NEW_AUTOGENERATED_ID = 1;
  const newClub = await repository.save(sampleClub);
  expect(newClub.id).toEqual(NEW_AUTOGENERATED_ID);

  newClub.name = 'Independiente';
  const modifiedClub = await repository.save(newClub);
  expect(modifiedClub.id).toEqual(NEW_AUTOGENERATED_ID);
  expect(modifiedClub.name).toEqual('Independiente');
});
